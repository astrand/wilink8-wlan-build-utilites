From 92b4a1a58893ecaf9e0bf802fb8d9bf03f3c1c6a Mon Sep 17 00:00:00 2001
From: Chen Loewy <c-loewy@ti.com>
Date: Tue, 5 Apr 2016 16:49:14 +0300
Subject: [PATCH 32/47] Mesh: Can't join other mesh network after joining mesh
 network

Due to the fix of how to deauthenticate a mesh interface
the problem was we sent a close action and never waited for a response
now we divided it into sending and waiting for the response and only then
deinitializing the interface.

in the select network scenario - this didn't work properly. we had to shorten
the timer time to 100ms from 300ms, change the code in such a way that it will
deinit only after the timer has finished.

fixes: WILINK8_SW_DEV-496 and WILINK8_SW_DEV-502

Signed-off-by: Chen Loewy <c-loewy@ti.com>
---
 wpa_supplicant/mesh_mpm.h         | 2 +-
 wpa_supplicant/wpa_supplicant.c   | 7 ++++++-
 wpa_supplicant/wpa_supplicant_i.h | 1 +
 3 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/wpa_supplicant/mesh_mpm.h b/wpa_supplicant/mesh_mpm.h
index 26111f2..4b00945 100644
--- a/wpa_supplicant/mesh_mpm.h
+++ b/wpa_supplicant/mesh_mpm.h
@@ -30,7 +30,7 @@ void mesh_mpm_action_rx(struct wpa_supplicant *wpa_s,
 			const struct ieee80211_mgmt *mgmt, size_t len);
 void mesh_mpm_mgmt_rx(struct wpa_supplicant *wpa_s, struct rx_mgmt *rx_mgmt);
 
-#define MESH_CLOSE_LINKS_RESPONSE_TIMER	300000 // 300 ms - 300,000usec
+#define MESH_CLOSE_LINKS_RESPONSE_TIMER	100000 // 100 ms - 100,000usec
 
 #else /* CONFIG_MESH */
 
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index 62d5fcf..ecc46af 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -3432,7 +3432,7 @@ static void wpas_start_assoc_cb(struct wpa_radio_work *work, int deinit)
 }
 
 
-static void wpa_supplicant_clear_connection(struct wpa_supplicant *wpa_s,
+void wpa_supplicant_clear_connection(struct wpa_supplicant *wpa_s,
 					    const u8 *addr)
 {
 	struct wpa_ssid *old_ssid;
@@ -3506,6 +3506,8 @@ void wpa_supplicant_deauthenticate(struct wpa_supplicant *wpa_s,
 		wpa_supplicant_leave_mesh_initiate(wpa_s);
 
 	}
+	else
+	{
 #endif /* CONFIG_MESH */
 
 	if (addr) {
@@ -3519,6 +3521,9 @@ void wpa_supplicant_deauthenticate(struct wpa_supplicant *wpa_s,
 	}
 
 	wpa_supplicant_clear_connection(wpa_s, addr);
+#ifdef CONFIG_MESH
+	}
+#endif
 }
 
 static void wpa_supplicant_enable_one_network(struct wpa_supplicant *wpa_s,
diff --git a/wpa_supplicant/wpa_supplicant_i.h b/wpa_supplicant/wpa_supplicant_i.h
index 0e5b632..dfc7752 100644
--- a/wpa_supplicant/wpa_supplicant_i.h
+++ b/wpa_supplicant/wpa_supplicant_i.h
@@ -1474,6 +1474,7 @@ int wpas_temp_disabled(struct wpa_supplicant *wpa_s, struct wpa_ssid *ssid);
 void wpa_supplicant_update_channel_list(struct wpa_supplicant *wpa_s,
 					struct channel_list_changed *info);
 
+void wpa_supplicant_clear_connection(struct wpa_supplicant *wpa_s,const u8 *addr);
 /* eap_register.c */
 int eap_register_methods(void);
 
-- 
1.9.1

